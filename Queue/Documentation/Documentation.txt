ALTER PROCEDURE [dbo].[Queues_add]

	@Id uniqueidentifier,
	@QueueCategories_Id uniqueidentifier,
	@FILTER_QueueNoCutoffTimestamp datetime = NULL,
	@returnValueString nvarchar(MAX) OUTPUT
	
AS

BEGIN

	DECLARE @No int = 0;
	
	SELECT @No = ISNULL(MAX(Queues.No), 0) + 1 
	FROM Queues 
	WHERE QueueCategories_Id = @QueueCategories_Id 
		AND (@FILTER_QueueNoCutoffTimestamp IS NULL OR Queues.Timestamp >= @FILTER_QueueNoCutoffTimestamp)

	INSERT INTO Queues(Id,Timestamp,QueueCategories_Id,QueueCategories_Code,No) 
	VALUES(@Id,CURRENT_TIMESTAMP,@QueueCategories_Id,(SELECT Code FROM QueueCategories WHERE Id=@QueueCategories_Id),@No)
	
	SELECT @returnValueString = CONVERT(varchar, QueueCategories.Code) + CONVERT(varchar, Queues.No)
	FROM Queues
		LEFT OUTER JOIN QueueCategories ON QueueCategories.Id = Queues.QueueCategories_Id
	WHERE Queues.Id = @Id

END
GO
ALTER PROCEDURE [dbo].[Queues_callNext]

	@QueueCategories_Id uniqueidentifier,
	@CounterAddresses_Id uniqueidentifier,
	@returnValueString varchar(MAX) = NULL OUTPUT

AS

BEGIN

	DECLARE @NextId uniqueidentifier
	SELECT TOP 1 @NextId = Queues.Id
	FROM Queues
	WHERE Queues.QueueCategories_Id = @QueueCategories_Id 
		AND Queues.CallTimestamp IS NULL 
		AND Queues.VoidTimestamp IS NULL
	ORDER BY No ASC
	
	IF @NextId IS NOT NULL
	BEGIN
		EXECUTE Queues_call @NextId, @CounterAddresses_Id

		SELECT @returnValueString = CONVERT(varchar, QueueCategories.Code) + CONVERT(varchar, Queues.No)
		FROM Queues 
			LEFT OUTER JOIN QueueCategories ON QueueCategories.Id = Queues.QueueCategories_Id 
		WHERE Queues.Id = @NextId
	END

END
GO
ALTER PROCEDURE [dbo].[CounterAddresses_get_Name_by_IPAddress]

	@IPAddress nvarchar(MAX),
	@returnValueString nvarchar(MAX) OUTPUT

AS

BEGIN

	SELECT @returnValueString = CounterAddresses.Name
	FROM CounterAddresses 
	WHERE IPAddress = @IPAddress

END
GO
